spring.application.name=taskmanager
// backend/src/main/resources/application.properties
# Server Port
server.port=8085

# Database Configuration (SQL Server)
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=olivetrackingsystem;encrypt=true;trustServerCertificate=true
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.username=sa
spring.datasource.password=Sqlserver2022
#spring.datasource.password=root

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.properties.hibernate.format_sql=true

# JPA/Hibernate Configuration
# 'update' creates/updates tables based on entities.
# 'create-drop' creates on startup, drops on shutdown (good for testing).
# 'none' expects tables to exist. Recommended for production with separate migration tools.
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true # Log SQL queries

# CORS Configuration (Crucial for Frontend-Backend communication)
# Allow requests from your frontend application's origin (e.g., http://localhost:3000 for React)
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:5173 # Add your frontend dev server URL here
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true # Allow cookies, authentication headers